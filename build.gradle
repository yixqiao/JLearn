plugins {
    id 'java'
    id 'application'
    id("maven-publish")
}

group 'me.yixqiao'
version '0.4.0'

application {
    mainClassName = "me.yixqiao.jlearn.testing.MNIST"
}

configurations {
    javadocCoverage
}

repositories {
    mavenCentral()
}

run {
    enableAssertions = true
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    javadocCoverage "com.manoelcampos:javadoc-coverage:1.1.0"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/yixqiao/jlearn")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

// This generates the Javadoc coverage report into build/reports/javadoc/javadoc-coverage.html
task javadocCoverageReport(type: Javadoc, dependsOn: javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadoc")
    options.docletpath = configurations.javadocCoverage.files.asType(List)
    options.doclet = "com.manoelcampos.javadoc.coverage.CoverageDoclet"
}

// Optionally you can add the dependsOn here so that when you generate the javadoc
// jar, e.g. if you include the javadocJar in a publishing configuration, the javadoc
// coverage report will be generated automatically.
task javadocJar(type: Jar, dependsOn: javadocCoverageReport) {
    classifier "javadoc"
    from javadoc.destinationDir
}